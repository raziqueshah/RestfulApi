import JwtToken from '../types/jwtToken';
/**
 * Starts the RTMP live stream for the specified conference.
 * Once the Dolby.io Communication API service started streaming to the target url,
 * a `Stream.Rtmp.InProgress` Webhook event will be sent.
 *
 * @link https://docs.dolby.io/communications-apis/reference/start-rtmp
 *
 * @param accessToken Access token to use for authentication.
 * @param conferenceId Identifier of the conference.
 * @param rtmpUrl The destination URI provided by the RTMP service.
 * @param layoutUrl Overwrites the layout URL configuration:
 *      - `null`: uses the layout URL configured in the dashboard (if no URL is set in the dashboard, then uses the Dolby.io default);
 *      - `default`: uses the Dolby.io default layout;
 *      - URL string: uses this layout URL
 */
export declare const startRtmp: (accessToken: JwtToken, conferenceId: string, rtmpUrl: string, layoutUrl?: string) => Promise<void>;
/**
 * Stops the RTMP stream of the specified conference.
 *
 * @link https://docs.dolby.io/communications-apis/reference/stop-rtmp
 *
 * @param accessToken Access token to use for authentication.
 * @param conferenceId Identifier of the conference.
 */
export declare const stopRtmp: (accessToken: JwtToken, conferenceId: string) => Promise<void>;
/**
 * Starts real-time streaming using Dolby.io Real-time Streaming services (formerly Millicast).
 *
 * @link https://docs.dolby.io/communications-apis/reference/start-rts
 *
 * @param accessToken Access token to use for authentication.
 * @param conferenceId Identifier of the conference.
 * @param streamName The Millicast stream name to which the conference is broadcasted.
 * @param publishingToken The Millicast publishing token used to identify the broadcaster.
 * @param layoutUrl Overwrites the layout URL configuration:
 *      - `null`: uses the layout URL configured in the dashboard (if no URL is set in the dashboard, then uses the Dolby.io default);
 *      - `default`: uses the Dolby.io default layout;
 *      - URL string: uses this layout URL
 */
export declare const startRts: (accessToken: JwtToken, conferenceId: string, streamName: string, publishingToken: string, layoutUrl?: string) => Promise<void>;
/**
 * Stops real-time streaming to Dolby.io Real-time Streaming services.
 *
 * @link https://docs.dolby.io/communications-apis/reference/stop-rts
 *
 * @param accessToken Access token to use for authentication.
 * @param conferenceId Identifier of the conference.
 */
export declare const stopRts: (accessToken: JwtToken, conferenceId: string) => Promise<void>;
