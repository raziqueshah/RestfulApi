"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getResults = exports.start = void 0;
const jobsHelpers_1 = require("./internal/jobsHelpers");
/**
 * Starts diagnosing to learn about the audio quality of your media.
 *
 * The `input` location of your source media file is required.
 *
 * This is an asynchronous operation so you will receive a `job_id` to be used to get the job status and result.
 *
 * @link https://docs.dolby.io/media-apis/reference/media-diagnose-post
 *
 * Beta API
 * This API is being made available as an early preview.
 * If you have feedback on how you'd like to use the API please reach out to share your feedback with our team.
 * https://dolby.io/contact
 *
 * @param accessToken Access token to use for authentication.
 * @param jobContent Content of the job description as a JSON payload. You can find the definition at this URL: https://docs.dolby.io/media-apis/reference/media-diagnose-post
 *
 * @returns The job identifier through a `Promise`.
 */
const start = (accessToken, jobContent) => __awaiter(void 0, void 0, void 0, function* () {
    return yield (0, jobsHelpers_1.startJob)(accessToken, '/media/diagnose', jobContent);
});
exports.start = start;
/**
 * Gets Diagnose Results.
 *
 * For a given job_id, this method will check if the processing task has completed.
 *
 * The `progress` attribute provides a percentage of job progress.
 *
 * If the `status` is Success then the json result will be returned in the response.
 *
 * @link https://docs.dolby.io/media-apis/reference/media-diagnose-get
 *
 * @param accessToken Access token to use for authentication.
 * @param jobId Identifier of the job to retrieve.
 *
 * @returns The `DiagnoseJob` object through a `Promise`.
 */
const getResults = (accessToken, jobId) => __awaiter(void 0, void 0, void 0, function* () {
    return yield (0, jobsHelpers_1.getJobResults)(accessToken, '/media/diagnose', jobId);
});
exports.getResults = getResults;
//# sourceMappingURL=diagnose.js.map