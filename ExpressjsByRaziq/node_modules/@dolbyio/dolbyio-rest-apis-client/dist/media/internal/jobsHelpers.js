"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getJobResults = exports.startJob = void 0;
const httpHelpers_1 = require("./httpHelpers");
const urls_1 = require("./urls");
const startJob = (accessToken, urlPath, jobContent) => __awaiter(void 0, void 0, void 0, function* () {
    const requestOptions = {
        hostname: urls_1.API_HOSTNAME,
        path: urlPath,
        headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
        },
        accessToken,
        body: jobContent,
    };
    const response = yield (0, httpHelpers_1.sendPost)(requestOptions);
    if (response.hasOwnProperty('job_id')) {
        return response['job_id'];
    }
    return null;
});
exports.startJob = startJob;
const getJobResults = (accessToken, urlPath, jobId) => __awaiter(void 0, void 0, void 0, function* () {
    const requestOptions = {
        hostname: urls_1.API_HOSTNAME,
        path: urlPath,
        params: {
            job_id: jobId,
        },
        headers: {},
        accessToken,
    };
    const response = yield (0, httpHelpers_1.sendGet)(requestOptions);
    return response;
});
exports.getJobResults = getJobResults;
//# sourceMappingURL=jobsHelpers.js.map